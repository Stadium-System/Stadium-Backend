name: Admin/Events
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/admin/events
    metadata:
      groupName: Admin/Events
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Event Management

        Retrieves a paginated list of all events with filtering options.
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      'filter[name]':
        name: 'filter[name]'
        description: 'Optional event name filter.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'filter[stadium_id]':
        name: 'filter[stadium_id]'
        description: 'Optional stadium ID filter.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'filter[user_id]':
        name: 'filter[user_id]'
        description: "Optional owner's user ID filter."
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'filter[status]':
        name: 'filter[status]'
        description: 'Optional status filter (active, inactive).'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'filter[date_from]':
        name: 'filter[date_from]'
        description: 'date Optional minimum date filter.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'filter[date_to]':
        name: 'filter[date_to]'
        description: 'date Optional maximum date filter.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Optional sort parameter. Prefix with "-" for descending order.'
        required: false
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanQueryParameters:
      'filter[name]': architecto
      'filter[stadium_id]': 16
      'filter[user_id]': 16
      'filter[status]': architecto
      'filter[date_from]': architecto
      'filter[date_to]': architecto
      sort: architecto
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Weekend Tournament",
                "description": "5v5 football tournament",
                "date": "2025-06-15T18:00:00.000000Z",
                "images": [
                  {
                    "id": 1,
                    "url": "https://example.com/event-image.jpg"
                  }
                ],
                "status": "active",
                "stadium": {
                  "id": 1,
                  "name": "City Stadium"
                },
                "user": {
                  "id": 1,
                  "name": "John Doe"
                },
                "created_at": "2025-05-01T00:00:00.000000Z",
                "updated_at": "2025-05-01T00:00:00.000000Z"
              }
            ],
            "links": { ... },
            "meta": { ... }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/events
    metadata:
      groupName: Admin/Events
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Create Event

        Creates a new event with the provided details.
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the event.'
        required: true
        example: 'Admin Created Tournament'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the event.'
        required: true
        example: 'Tournament created by admin'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date:
        name: date
        description: 'The date and time of the event. Must be in the future.'
        required: true
        example: '2025-07-01 20:00:00'
        type: datetime
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      stadium_id:
        name: stadium_id
        description: 'The ID of the stadium.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The ID of the owner/organizer.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status of the event (active or inactive).'
        required: false
        example: active
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      media_ids:
        name: media_ids
        description: 'Optional array of media IDs for event images.'
        required: false
        example:
          - 1
          - 2
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'media_ids.*':
        name: 'media_ids.*'
        description: 'The media ID for each image.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Admin Created Tournament'
      description: 'Tournament created by admin'
      date: '2025-07-01 20:00:00'
      stadium_id: 2
      user_id: 3
      status: active
      media_ids:
        - 1
        - 2
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 2,
              "name": "Admin Created Tournament",
              "description": "Tournament created by admin",
              "date": "2025-07-01T20:00:00.000000Z",
              "images": [],
              "status": "active",
              "stadium": {
                "id": 2,
                "name": "Sports Complex"
              },
              "user": {
                "id": 3,
                "name": "Stadium Owner"
              },
              "created_at": "2025-05-10T10:00:00.000000Z",
              "updated_at": "2025-05-10T10:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/events/{id}'
    metadata:
      groupName: Admin/Events
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Get Event Details

        Retrieves the details of a specific event.
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "name": "Weekend Tournament",
              "description": "5v5 football tournament",
              "date": "2025-06-15T18:00:00.000000Z",
              "images": [
                {
                  "id": 1,
                  "url": "https://example.com/event-image.jpg"
                }
              ],
              "status": "active",
              "stadium": {
                "id": 1,
                "name": "City Stadium"
              },
              "user": {
                "id": 1,
                "name": "John Doe"
              },
              "created_at": "2025-05-01T00:00:00.000000Z",
              "updated_at": "2025-05-01T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/admin/events/{id}'
    metadata:
      groupName: Admin/Events
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Update Event

        Updates an existing event with the provided details.
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the event.'
        required: false
        example: 'Updated Tournament'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the event.'
        required: false
        example: 'Updated by admin'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date:
        name: date
        description: 'The date and time of the event. Must be in the future.'
        required: false
        example: '2025-07-15 21:00:00'
        type: datetime
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      stadium_id:
        name: stadium_id
        description: 'The ID of the stadium.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The ID of the owner/organizer.'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status of the event (active or inactive).'
        required: false
        example: inactive
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      media_ids:
        name: media_ids
        description: 'Optional array of media IDs for event images.'
        required: false
        example:
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'media_ids.*':
        name: 'media_ids.*'
        description: 'The media ID for each image.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Updated Tournament'
      description: 'Updated by admin'
      date: '2025-07-15 21:00:00'
      stadium_id: 3
      user_id: 4
      status: inactive
      media_ids:
        - 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "name": "Updated Tournament",
              "description": "Updated by admin",
              "date": "2025-07-15T21:00:00.000000Z",
              "images": [
                {
                  "id": 3,
                  "url": "https://example.com/new-event-image.jpg"
                }
              ],
              "status": "inactive",
              "stadium": {
                "id": 3,
                "name": "New Stadium"
              },
              "user": {
                "id": 4,
                "name": "New Owner"
              },
              "created_at": "2025-05-01T00:00:00.000000Z",
              "updated_at": "2025-05-10T11:30:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/events/{id}'
    metadata:
      groupName: Admin/Events
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Delete Event

        Deletes an event.
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Event deleted successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/admin/events/{event_id}/images/{image}'
    metadata:
      groupName: Admin/Events
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Remove Event Image

        Removes an image from an event.
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      event_id:
        name: event_id
        description: 'The ID of the event.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      image:
        name: image
        description: 'The ID of the image to remove.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      event:
        name: event
        description: 'The ID of the event.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      event_id: 3
      image: 2
      event: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Image removed successfully"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/events/{id}'
    metadata:
      groupName: Admin/Events
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Update Event

        Updates an existing event with the provided details.
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the event.'
        required: false
        example: 'Updated Tournament'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description of the event.'
        required: false
        example: 'Updated by admin'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      date:
        name: date
        description: 'The date and time of the event. Must be in the future.'
        required: false
        example: '2025-07-15 21:00:00'
        type: datetime
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      stadium_id:
        name: stadium_id
        description: 'The ID of the stadium.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      user_id:
        name: user_id
        description: 'The ID of the owner/organizer.'
        required: false
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status of the event (active or inactive).'
        required: false
        example: inactive
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      media_ids:
        name: media_ids
        description: 'Optional array of media IDs for event images.'
        required: false
        example:
          - 3
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      'media_ids.*':
        name: 'media_ids.*'
        description: 'The media ID for each image.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Updated Tournament'
      description: 'Updated by admin'
      date: '2025-07-15 21:00:00'
      stadium_id: 3
      user_id: 4
      status: inactive
      media_ids:
        - 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "name": "Updated Tournament",
              "description": "Updated by admin",
              "date": "2025-07-15T21:00:00.000000Z",
              "images": [
                {
                  "id": 3,
                  "url": "https://example.com/new-event-image.jpg"
                }
              ],
              "status": "inactive",
              "stadium": {
                "id": 3,
                "name": "New Stadium"
              },
              "user": {
                "id": 4,
                "name": "New Owner"
              },
              "created_at": "2025-05-01T00:00:00.000000Z",
              "updated_at": "2025-05-10T11:30:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
